//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicyManagement.Infrastructures.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DataContext : DbContext
    {
        public DataContext()
            : base("name=DataContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tblAddonPlanOption> tblAddonPlanOption { get; set; }
        public virtual DbSet<tblAddonPlanOptionMapping> tblAddonPlanOptionMapping { get; set; }
        public virtual DbSet<tblAddonRider> tblAddonRider { get; set; }
        public virtual DbSet<tblAgentSwapping> tblAgentSwapping { get; set; }
        public virtual DbSet<tblBank> tblBank { get; set; }
        public virtual DbSet<tblBasementExposer> tblBasementExposer { get; set; }
        public virtual DbSet<tblBounceReason> tblBounceReason { get; set; }
        public virtual DbSet<tblBranch> tblBranch { get; set; }
        public virtual DbSet<tblBranchServiceProvider> tblBranchServiceProvider { get; set; }
        public virtual DbSet<tblBusinessType> tblBusinessType { get; set; }
        public virtual DbSet<tblCategory> tblCategory { get; set; }
        public virtual DbSet<tblChequeFromAccount> tblChequeFromAccount { get; set; }
        public virtual DbSet<tblCity> tblCity { get; set; }
        public virtual DbSet<tblClaimData> tblClaimData { get; set; }
        public virtual DbSet<tblClaimFollowupDetails> tblClaimFollowupDetails { get; set; }
        public virtual DbSet<tblClaimStatus> tblClaimStatus { get; set; }
        public virtual DbSet<tblClaimSubStatus> tblClaimSubStatus { get; set; }
        public virtual DbSet<tblClaimType> tblClaimType { get; set; }
        public virtual DbSet<tblCluster> tblCluster { get; set; }
        public virtual DbSet<tblCommissionPayType> tblCommissionPayType { get; set; }
        public virtual DbSet<tblCommissionSlab> tblCommissionSlab { get; set; }
        public virtual DbSet<tblCommissionSlabType> tblCommissionSlabType { get; set; }
        public virtual DbSet<tblCommissionTurnoverType> tblCommissionTurnoverType { get; set; }
        public virtual DbSet<tblCoverage> tblCoverage { get; set; }
        public virtual DbSet<tblCoverageInland> tblCoverageInland { get; set; }
        public virtual DbSet<tblCoverageOverseas> tblCoverageOverseas { get; set; }
        public virtual DbSet<tblCustomer> tblCustomer { get; set; }
        public virtual DbSet<tblDepartment> tblDepartment { get; set; }
        public virtual DbSet<tblDesignation> tblDesignation { get; set; }
        public virtual DbSet<tblDocmentType> tblDocmentType { get; set; }
        public virtual DbSet<tblEndorsementData> tblEndorsementData { get; set; }
        public virtual DbSet<tblEndorsementReason> tblEndorsementReason { get; set; }
        public virtual DbSet<tblEndorsementType> tblEndorsementType { get; set; }
        public virtual DbSet<tblFinancer> tblFinancer { get; set; }
        public virtual DbSet<tblFireCoverage> tblFireCoverage { get; set; }
        public virtual DbSet<tblFormList> tblFormList { get; set; }
        public virtual DbSet<tblFuelType> tblFuelType { get; set; }
        public virtual DbSet<tblGender> tblGender { get; set; }
        public virtual DbSet<tblGenerator> tblGenerator { get; set; }
        public virtual DbSet<tblGST> tblGST { get; set; }
        public virtual DbSet<tblIndustry> tblIndustry { get; set; }
        public virtual DbSet<tblInspectionCompany> tblInspectionCompany { get; set; }
        public virtual DbSet<tblInspectionData> tblInspectionData { get; set; }
        public virtual DbSet<tblInspectionReason> tblInspectionReason { get; set; }
        public virtual DbSet<tblInspectionStatus> tblInspectionStatus { get; set; }
        public virtual DbSet<tblInspectionSubStatus> tblInspectionSubStatus { get; set; }
        public virtual DbSet<tblInsuranceCompany> tblInsuranceCompany { get; set; }
        public virtual DbSet<tblInsuranceCompanyBranch> tblInsuranceCompanyBranch { get; set; }
        public virtual DbSet<tblInsuredPerson> tblInsuredPerson { get; set; }
        public virtual DbSet<tblMakeYear> tblMakeYear { get; set; }
        public virtual DbSet<tblManufacturer> tblManufacturer { get; set; }
        public virtual DbSet<tblMaritalStatus> tblMaritalStatus { get; set; }
        public virtual DbSet<tblMenuItem> tblMenuItem { get; set; }
        public virtual DbSet<tblModel> tblModel { get; set; }
        public virtual DbSet<tblMonthCycle> tblMonthCycle { get; set; }
        public virtual DbSet<tblMotorPolicyData> tblMotorPolicyData { get; set; }
        public virtual DbSet<tblNCB> tblNCB { get; set; }
        public virtual DbSet<tblNoofMember> tblNoofMember { get; set; }
        public virtual DbSet<tblNoofYear> tblNoofYear { get; set; }
        public virtual DbSet<tblOccupation> tblOccupation { get; set; }
        public virtual DbSet<tblPaymentMode> tblPaymentMode { get; set; }
        public virtual DbSet<tblPaymentType> tblPaymentType { get; set; }
        public virtual DbSet<tblPED> tblPED { get; set; }
        public virtual DbSet<tblPlan> tblPlan { get; set; }
        public virtual DbSet<tblPlanType> tblPlanType { get; set; }
        public virtual DbSet<tblPolicyAddonOptionDetails> tblPolicyAddonOptionDetails { get; set; }
        public virtual DbSet<tblPolicyPackageType> tblPolicyPackageType { get; set; }
        public virtual DbSet<tblPolicyPaymentData> tblPolicyPaymentData { get; set; }
        public virtual DbSet<tblPolicyStatus> tblPolicyStatus { get; set; }
        public virtual DbSet<tblPolicyTerm> tblPolicyTerm { get; set; }
        public virtual DbSet<tblPolicyType> tblPolicyType { get; set; }
        public virtual DbSet<tblPortability> tblPortability { get; set; }
        public virtual DbSet<tblPOS> tblPOS { get; set; }
        public virtual DbSet<tblPOSContact> tblPOSContact { get; set; }
        public virtual DbSet<tblPPC> tblPPC { get; set; }
        public virtual DbSet<tblProduct> tblProduct { get; set; }
        public virtual DbSet<tblProfession> tblProfession { get; set; }
        public virtual DbSet<tblReceivedStatus> tblReceivedStatus { get; set; }
        public virtual DbSet<tblReference> tblReference { get; set; }
        public virtual DbSet<tblReferenceLead> tblReferenceLead { get; set; }
        public virtual DbSet<tblReferType> tblReferType { get; set; }
        public virtual DbSet<tblRelationShip> tblRelationShip { get; set; }
        public virtual DbSet<tblRiskClass> tblRiskClass { get; set; }
        public virtual DbSet<tblRTOZone> tblRTOZone { get; set; }
        public virtual DbSet<tblServiceProvider> tblServiceProvider { get; set; }
        public virtual DbSet<tblSession> tblSession { get; set; }
        public virtual DbSet<tblState> tblState { get; set; }
        public virtual DbSet<tblStatus> tblStatus { get; set; }
        public virtual DbSet<tblStorageRisk> tblStorageRisk { get; set; }
        public virtual DbSet<tblSubStatus> tblSubStatus { get; set; }
        public virtual DbSet<tblTeamMember> tblTeamMember { get; set; }
        public virtual DbSet<tblTerritory> tblTerritory { get; set; }
        public virtual DbSet<tblTitle> tblTitle { get; set; }
        public virtual DbSet<tblType> tblType { get; set; }
        public virtual DbSet<tblUploadedDocuments> tblUploadedDocuments { get; set; }
        public virtual DbSet<tblUser> tblUser { get; set; }
        public virtual DbSet<tblUserRights> tblUserRights { get; set; }
        public virtual DbSet<tblUserRole> tblUserRole { get; set; }
        public virtual DbSet<tblUserType> tblUserType { get; set; }
        public virtual DbSet<tblVariant> tblVariant { get; set; }
        public virtual DbSet<tblVehicleClass> tblVehicleClass { get; set; }
        public virtual DbSet<tblVehicleSegment> tblVehicleSegment { get; set; }
        public virtual DbSet<tblVehicleUsage> tblVehicleUsage { get; set; }
        public virtual DbSet<tblVertical> tblVertical { get; set; }
        public virtual DbSet<tblVerticalSegment> tblVerticalSegment { get; set; }
        public virtual DbSet<tblVoucherDetails> tblVoucherDetails { get; set; }
        public virtual DbSet<tblVoucherStatus> tblVoucherStatus { get; set; }
        public virtual DbSet<tblVoucherType> tblVoucherType { get; set; }
        public virtual DbSet<tblVoyageOverseasType> tblVoyageOverseasType { get; set; }
        public virtual DbSet<tblVoyageType> tblVoyageType { get; set; }
        public virtual DbSet<PolicyDataView> PolicyDataView { get; set; }
        public virtual DbSet<qryCustomerCarePerformance> qryCustomerCarePerformance { get; set; }
        public virtual DbSet<SearchClaims> SearchClaims { get; set; }
        public virtual DbSet<SearchClaimsPolicy> SearchClaimsPolicy { get; set; }
        public virtual DbSet<SearchInspection> SearchInspection { get; set; }
        public virtual DbSet<SearchVoucher> SearchVoucher { get; set; }
        public virtual DbSet<View_SearchForm> View_SearchForm { get; set; }
        public virtual DbSet<View_SearchForm_Policies> View_SearchForm_Policies { get; set; }
        public virtual DbSet<ViewAllDatatypeInOne> ViewAllDatatypeInOne { get; set; }
        public virtual DbSet<viewCustomerCare> viewCustomerCare { get; set; }
        public virtual DbSet<ViewCustomerCareCrossSell> ViewCustomerCareCrossSell { get; set; }
        public virtual DbSet<ViewCustomerEmailID> ViewCustomerEmailID { get; set; }
        public virtual DbSet<ViewCustomerMobileNo> ViewCustomerMobileNo { get; set; }
        public virtual DbSet<ViewDSAAllEmailId> ViewDSAAllEmailId { get; set; }
        public virtual DbSet<ViewDSAAllMobileNo> ViewDSAAllMobileNo { get; set; }
        public virtual DbSet<ViewMasterWithMotorPolicy> ViewMasterWithMotorPolicy { get; set; }
        public virtual DbSet<ViewPendingCommission> ViewPendingCommission { get; set; }
        public virtual DbSet<ViewPersonDataBirthdayWish> ViewPersonDataBirthdayWish { get; set; }
        public virtual DbSet<viewRenewPerformance> viewRenewPerformance { get; set; }
        public virtual DbSet<viewRenewPerformanceNonMotor> viewRenewPerformanceNonMotor { get; set; }
    
        public virtual int GetOtherHelathPolicy(Nullable<int> policyId, Nullable<int> customerID)
        {
            var policyIdParameter = policyId.HasValue ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetOtherHelathPolicy", policyIdParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<GetPolicyFamilyDtl_Result> GetPolicyFamilyDtl(Nullable<int> policyId)
        {
            var policyIdParameter = policyId.HasValue ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPolicyFamilyDtl_Result>("GetPolicyFamilyDtl", policyIdParameter);
        }
    
        public virtual int Sp_GetTelecallerReassignData(Nullable<int> telecaller)
        {
            var telecallerParameter = telecaller.HasValue ?
                new ObjectParameter("Telecaller", telecaller) :
                new ObjectParameter("Telecaller", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetTelecallerReassignData", telecallerParameter);
        }
    
        public virtual int Sp_GetTelecallerReverData(Nullable<int> telecaller, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var telecallerParameter = telecaller.HasValue ?
                new ObjectParameter("Telecaller", telecaller) :
                new ObjectParameter("Telecaller", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetTelecallerReverData", telecallerParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_Bussinessby(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_Bussinessby", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_CurrentTeleCallerWithCnt(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_CurrentTeleCallerWithCnt", fromDateParameter, toDateParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_DSACategorySearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_DSACategorySearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_DSASearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_DSASearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_FuelType(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_FuelType", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual ObjectResult<Usp_GetManufacturer_Result> Usp_GetManufacturer(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetManufacturer_Result>("Usp_GetManufacturer", iDParameter);
        }
    
        public virtual int Usp_GrossPremiumSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_GrossPremiumSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_InsuranceSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string manufacturereId, string vehicleType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_InsuranceSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, manufacturereIdParameter, vehicleTypeParameter);
        }
    
        public virtual int Usp_LastYearTeleCallerSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_LastYearTeleCallerSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_Lost_TelecallerDashboard(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_Lost_TelecallerDashboard", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_Lost_TeleCallerTodayStatus(Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_Lost_TeleCallerTodayStatus", iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_MarketCrossReferencing(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketCrossReferencing", branchIdParameter);
        }
    
        public virtual int Usp_MarketDataSourceSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string manufacturer)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("Manufacturer", manufacturer) :
                new ObjectParameter("Manufacturer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketDataSourceSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, manufacturerParameter);
        }
    
        public virtual int Usp_MarketInsureSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string source, string manufacturer)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("Manufacturer", manufacturer) :
                new ObjectParameter("Manufacturer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketInsureSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, sourceParameter, manufacturerParameter);
        }
    
        public virtual int Usp_MarketManufacturerSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string source)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketManufacturerSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, sourceParameter);
        }
    
        public virtual int Usp_MarketTelecallerDashboard(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketTelecallerDashboard", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_MarketTeleCallerSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string source, string manufacturer)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("Manufacturer", manufacturer) :
                new ObjectParameter("Manufacturer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketTeleCallerSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, sourceParameter, manufacturerParameter);
        }
    
        public virtual int Usp_MarketTeleCallerTodayStatus(Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketTeleCallerTodayStatus", iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_MarketVehiclerSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string source, string manufacturer)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("Manufacturer", manufacturer) :
                new ObjectParameter("Manufacturer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketVehiclerSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, sourceParameter, manufacturerParameter);
        }
    
        public virtual int Usp_MotorSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MotorSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter);
        }
    
        public virtual int Usp_NCBSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_NCBSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_ProcForHomePageChart(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ProcForHomePageChart", fromDateParameter, toDateParameter, iDParameter, verticalParameter, branchIdParameter);
        }
    
        public virtual int Usp_ProcForHomePageDailyCount(Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ProcForHomePageDailyCount", iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_ProductSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string insurencecompany, string wholeVerticalType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var wholeVerticalTypeParameter = wholeVerticalType != null ?
                new ObjectParameter("WholeVerticalType", wholeVerticalType) :
                new ObjectParameter("WholeVerticalType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ProductSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, insurencecompanyParameter, wholeVerticalTypeParameter);
        }
    
        public virtual int Usp_ReallocateBussinessby(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateBussinessby", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateDSACategorySearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateDSACategorySearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateDSASearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateDSASearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateFuelType(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateFuelType", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateGrossPremiumSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateGrossPremiumSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateInsuranceSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateInsuranceSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateLastYearTeleCallerSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateLastYearTeleCallerSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateLeadPrioritySearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateLeadPrioritySearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateManufacturerSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateManufacturerSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateMarketDataSourceSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateMarketDataSourceSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateMarketInsureSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateMarketInsureSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateMarketManufacturerSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateMarketManufacturerSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateMarketTelecallerSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateMarketTelecallerSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateMarketVehicleTypeSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateMarketVehicleTypeSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateNCBSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateNCBSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateTermSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateTermSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateVehicleClassSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateVehicleClassSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateVerticalSearch(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateVerticalSearch", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReferenceTelecallerDashboard(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReferenceTelecallerDashboard", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReferenceTeleCallerTodayStatus(Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReferenceTeleCallerTodayStatus", iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_RefLeadPrioritySearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RefLeadPrioritySearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter);
        }
    
        public virtual int Usp_RenewCompAddOnPlan(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompAddOnPlan", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompFuelType(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompFuelType", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompInsuranceSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string manufacturereId, string vehicleType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompInsuranceSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, manufacturereIdParameter, vehicleTypeParameter);
        }
    
        public virtual int Usp_RenewCompMakeYear(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompMakeYear", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompManufacturereSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompManufacturereSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter);
        }
    
        public virtual int Usp_RenewCompNCBSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompNCBSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompPolicyPackageSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompPolicyPackageSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompRTOZone(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompRTOZone", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompVehicleClassSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompVehicleClassSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RPT_MarketStatusCountExpiryDatewise(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RPT_MarketStatusCountExpiryDatewise", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_RPT_ReferenceStatusCountExpiryDatewise(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RPT_ReferenceStatusCountExpiryDatewise", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_RPT_RenewLostStatusCountExpiryDatewise(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RPT_RenewLostStatusCountExpiryDatewise", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_RPTInstantPendingRecord(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> docType, Nullable<int> insurencecompany)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var docTypeParameter = docType.HasValue ?
                new ObjectParameter("DocType", docType) :
                new ObjectParameter("DocType", typeof(int));
    
            var insurencecompanyParameter = insurencecompany.HasValue ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RPTInstantPendingRecord", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, docTypeParameter, insurencecompanyParameter);
        }
    
        public virtual int Usp_TelecallerDashboard(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_TelecallerDashboard", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_TeleCallerTodayStatus(Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_TeleCallerTodayStatus", iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_TermSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_TermSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_UnallocateInsuranceSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnallocateInsuranceSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnAllocateManufacturerSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnAllocateManufacturerSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnallocateMarketDataSourceSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnallocateMarketDataSourceSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnallocateMarketManufacturerSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnallocateMarketManufacturerSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnallocateRefLeadPrioritySearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnallocateRefLeadPrioritySearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnallocateTermSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnallocateTermSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnAllocateVerticalSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnAllocateVerticalSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_VehicleClassSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_VehicleClassSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_VertcalBaseTelecaller(Nullable<int> verticalSegmentID, Nullable<int> branchId)
        {
            var verticalSegmentIDParameter = verticalSegmentID.HasValue ?
                new ObjectParameter("VerticalSegmentID", verticalSegmentID) :
                new ObjectParameter("VerticalSegmentID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_VertcalBaseTelecaller", verticalSegmentIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_VerticalSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string insurencecompany)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_VerticalSearch", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, insurencecompanyParameter);
        }
    
        public virtual ObjectResult<Usp_UploadedDocuments_Result> Usp_UploadedDocuments(Nullable<int> inspectionId)
        {
            var inspectionIdParameter = inspectionId.HasValue ?
                new ObjectParameter("inspectionId", inspectionId) :
                new ObjectParameter("inspectionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_UploadedDocuments_Result>("Usp_UploadedDocuments", inspectionIdParameter);
        }
    
        public virtual int GetOtherHelathPolicy1(Nullable<int> policyId, Nullable<int> customerID)
        {
            var policyIdParameter = policyId.HasValue ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetOtherHelathPolicy1", policyIdParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<GetPolicyFamilyDtl1_Result> GetPolicyFamilyDtl1(Nullable<int> policyId)
        {
            var policyIdParameter = policyId.HasValue ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPolicyFamilyDtl1_Result>("GetPolicyFamilyDtl1", policyIdParameter);
        }
    
        public virtual int Sp_GetTelecallerReassignData1(Nullable<int> telecaller)
        {
            var telecallerParameter = telecaller.HasValue ?
                new ObjectParameter("Telecaller", telecaller) :
                new ObjectParameter("Telecaller", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetTelecallerReassignData1", telecallerParameter);
        }
    
        public virtual int Sp_GetTelecallerReverData1(Nullable<int> telecaller, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var telecallerParameter = telecaller.HasValue ?
                new ObjectParameter("Telecaller", telecaller) :
                new ObjectParameter("Telecaller", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetTelecallerReverData1", telecallerParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_Bussinessby1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_Bussinessby1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_CurrentTeleCallerWithCnt1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_CurrentTeleCallerWithCnt1", fromDateParameter, toDateParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_DSACategorySearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_DSACategorySearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_DSASearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_DSASearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_FuelType1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_FuelType1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual ObjectResult<Usp_GetManufacturer1_Result> Usp_GetManufacturer1(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetManufacturer1_Result>("Usp_GetManufacturer1", iDParameter);
        }
    
        public virtual int Usp_GrossPremiumSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_GrossPremiumSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_InsuranceSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string manufacturereId, string vehicleType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_InsuranceSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, manufacturereIdParameter, vehicleTypeParameter);
        }
    
        public virtual int Usp_LastYearTeleCallerSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_LastYearTeleCallerSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_Lost_TelecallerDashboard1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_Lost_TelecallerDashboard1", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_Lost_TeleCallerTodayStatus1(Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_Lost_TeleCallerTodayStatus1", iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_MarketCrossReferencing1(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketCrossReferencing1", branchIdParameter);
        }
    
        public virtual int Usp_MarketDataSourceSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string manufacturer)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("Manufacturer", manufacturer) :
                new ObjectParameter("Manufacturer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketDataSourceSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, manufacturerParameter);
        }
    
        public virtual int Usp_MarketInsureSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string source, string manufacturer)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("Manufacturer", manufacturer) :
                new ObjectParameter("Manufacturer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketInsureSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, sourceParameter, manufacturerParameter);
        }
    
        public virtual int Usp_MarketManufacturerSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string source)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketManufacturerSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, sourceParameter);
        }
    
        public virtual int Usp_MarketTelecallerDashboard1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketTelecallerDashboard1", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_MarketTeleCallerSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string source, string manufacturer)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("Manufacturer", manufacturer) :
                new ObjectParameter("Manufacturer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketTeleCallerSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, sourceParameter, manufacturerParameter);
        }
    
        public virtual int Usp_MarketTeleCallerTodayStatus1(Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketTeleCallerTodayStatus1", iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_MarketVehiclerSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string source, string manufacturer)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("Manufacturer", manufacturer) :
                new ObjectParameter("Manufacturer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MarketVehiclerSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, sourceParameter, manufacturerParameter);
        }
    
        public virtual int Usp_MotorSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_MotorSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter);
        }
    
        public virtual int Usp_NCBSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_NCBSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_ProcForHomePageChart1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ProcForHomePageChart1", fromDateParameter, toDateParameter, iDParameter, verticalParameter, branchIdParameter);
        }
    
        public virtual int Usp_ProcForHomePageDailyCount1(Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ProcForHomePageDailyCount1", iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_ProductSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string insurencecompany, string wholeVerticalType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var wholeVerticalTypeParameter = wholeVerticalType != null ?
                new ObjectParameter("WholeVerticalType", wholeVerticalType) :
                new ObjectParameter("WholeVerticalType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ProductSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, insurencecompanyParameter, wholeVerticalTypeParameter);
        }
    
        public virtual int Usp_ReallocateBussinessby1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateBussinessby1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateDSACategorySearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateDSACategorySearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateDSASearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateDSASearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateFuelType1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateFuelType1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateGrossPremiumSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateGrossPremiumSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateInsuranceSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateInsuranceSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateLastYearTeleCallerSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateLastYearTeleCallerSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateLeadPrioritySearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateLeadPrioritySearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateManufacturerSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateManufacturerSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateMarketDataSourceSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateMarketDataSourceSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateMarketInsureSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateMarketInsureSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateMarketManufacturerSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateMarketManufacturerSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateMarketTelecallerSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateMarketTelecallerSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateMarketVehicleTypeSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateMarketVehicleTypeSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateNCBSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateNCBSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateTermSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateTermSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateVehicleClassSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateVehicleClassSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReallocateVerticalSearch1(Nullable<int> employeeId, Nullable<int> vertical, Nullable<int> dataTypeId, Nullable<int> branchId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIdParameter = dataTypeId.HasValue ?
                new ObjectParameter("DataTypeId", dataTypeId) :
                new ObjectParameter("DataTypeId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReallocateVerticalSearch1", employeeIdParameter, verticalParameter, dataTypeIdParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReferenceTelecallerDashboard1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReferenceTelecallerDashboard1", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_ReferenceTeleCallerTodayStatus1(Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ReferenceTeleCallerTodayStatus1", iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_RefLeadPrioritySearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RefLeadPrioritySearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter);
        }
    
        public virtual int Usp_RenewCompAddOnPlan1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompAddOnPlan1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompFuelType1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompFuelType1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompInsuranceSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string manufacturereId, string vehicleType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompInsuranceSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, manufacturereIdParameter, vehicleTypeParameter);
        }
    
        public virtual int Usp_RenewCompMakeYear1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompMakeYear1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompManufacturereSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompManufacturereSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter);
        }
    
        public virtual int Usp_RenewCompNCBSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompNCBSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompPolicyPackageSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompPolicyPackageSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompRTOZone1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompRTOZone1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RenewCompVehicleClassSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RenewCompVehicleClassSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_RPT_MarketStatusCountExpiryDatewise1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RPT_MarketStatusCountExpiryDatewise1", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_RPT_ReferenceStatusCountExpiryDatewise1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, Nullable<int> dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID.HasValue ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RPT_ReferenceStatusCountExpiryDatewise1", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_RPT_RenewLostStatusCountExpiryDatewise1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RPT_RenewLostStatusCountExpiryDatewise1", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_RPTInstantPendingRecord1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> docType, Nullable<int> insurencecompany)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var docTypeParameter = docType.HasValue ?
                new ObjectParameter("DocType", docType) :
                new ObjectParameter("DocType", typeof(int));
    
            var insurencecompanyParameter = insurencecompany.HasValue ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_RPTInstantPendingRecord1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, docTypeParameter, insurencecompanyParameter);
        }
    
        public virtual int Usp_TelecallerDashboard1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_TelecallerDashboard1", fromDateParameter, toDateParameter, iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_TeleCallerTodayStatus1(Nullable<int> iD, Nullable<int> vertical, string dataTypeID, Nullable<int> branchId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var dataTypeIDParameter = dataTypeID != null ?
                new ObjectParameter("DataTypeID", dataTypeID) :
                new ObjectParameter("DataTypeID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_TeleCallerTodayStatus1", iDParameter, verticalParameter, dataTypeIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_TermSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string insurencecompany, string vehicleType, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_TermSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, insurencecompanyParameter, vehicleTypeParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_UnallocateInsuranceSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnallocateInsuranceSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnAllocateManufacturerSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnAllocateManufacturerSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnallocateMarketDataSourceSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnallocateMarketDataSourceSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnallocateMarketManufacturerSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnallocateMarketManufacturerSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnallocateRefLeadPrioritySearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnallocateRefLeadPrioritySearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnallocateTermSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnallocateTermSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual int Usp_UnAllocateVerticalSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, Nullable<int> telecallerId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var telecallerIdParameter = telecallerId.HasValue ?
                new ObjectParameter("TelecallerId", telecallerId) :
                new ObjectParameter("TelecallerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UnAllocateVerticalSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, telecallerIdParameter);
        }
    
        public virtual ObjectResult<Usp_UploadedDocuments1_Result> Usp_UploadedDocuments1(Nullable<int> inspectionId)
        {
            var inspectionIdParameter = inspectionId.HasValue ?
                new ObjectParameter("inspectionId", inspectionId) :
                new ObjectParameter("inspectionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_UploadedDocuments1_Result>("Usp_UploadedDocuments1", inspectionIdParameter);
        }
    
        public virtual int Usp_VehicleClassSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string poilcyPackageID, string insurencecompany, string manufacturereId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var poilcyPackageIDParameter = poilcyPackageID != null ?
                new ObjectParameter("PoilcyPackageID", poilcyPackageID) :
                new ObjectParameter("PoilcyPackageID", typeof(string));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            var manufacturereIdParameter = manufacturereId != null ?
                new ObjectParameter("ManufacturereId", manufacturereId) :
                new ObjectParameter("ManufacturereId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_VehicleClassSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, poilcyPackageIDParameter, insurencecompanyParameter, manufacturereIdParameter);
        }
    
        public virtual int Usp_VertcalBaseTelecaller1(Nullable<int> verticalSegmentID, Nullable<int> branchId)
        {
            var verticalSegmentIDParameter = verticalSegmentID.HasValue ?
                new ObjectParameter("VerticalSegmentID", verticalSegmentID) :
                new ObjectParameter("VerticalSegmentID", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_VertcalBaseTelecaller1", verticalSegmentIDParameter, branchIdParameter);
        }
    
        public virtual int Usp_VerticalSearch1(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> vertical, Nullable<int> branchId, string insurencecompany)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var insurencecompanyParameter = insurencecompany != null ?
                new ObjectParameter("Insurencecompany", insurencecompany) :
                new ObjectParameter("Insurencecompany", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_VerticalSearch1", fromDateParameter, toDateParameter, verticalParameter, branchIdParameter, insurencecompanyParameter);
        }
    
        public virtual ObjectResult<Usp_PolicyDocuments_Result1> Usp_PolicyDocuments(Nullable<int> policyId)
        {
            var policyIdParameter = policyId.HasValue ?
                new ObjectParameter("policyId", policyId) :
                new ObjectParameter("policyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_PolicyDocuments_Result1>("Usp_PolicyDocuments", policyIdParameter);
        }
    
        public virtual ObjectResult<Usp_InspectionByPolicyId_Result1> Usp_InspectionByPolicyId(Nullable<int> policyId)
        {
            var policyIdParameter = policyId.HasValue ?
                new ObjectParameter("policyId", policyId) :
                new ObjectParameter("policyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_InspectionByPolicyId_Result1>("Usp_InspectionByPolicyId", policyIdParameter);
        }
    }
}
