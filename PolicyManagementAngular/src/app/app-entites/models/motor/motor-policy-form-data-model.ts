import { IDateDto } from "src/app/app-entites/dtos/common/date-dto";
import { IDocumentModel } from "../common/document-model";
import { ICustomerFormDataModel } from "../customer/customer-form-data-model";
import { IAddOnRiderModel } from "./add-on-rider-model";
import { IInspectionFormDataModel } from "./inspection-form-data-model";
import { INominationFormDataModel } from "./nomination-form-data-model";
import { IPaymentFormDataModel } from "./payment-form-data-model";
import { IPolicySourceFormDataModel } from "./policy-source-form-data-model";
import { IPolicyTermFormDataModel } from "./policy-term-form-data-model";
import { IPremiumFormDataModel } from "./premium-form-data-model";
import { IPreviousPolicyFormDataModel } from "./previous-policy-form-data-model";
import { ITpOdPolicyFormDataModel } from "./tp-od-policy-form-data-model";
import { IVehicleFormDataModel } from "./vehicle-form-data-model";

export interface IMotorPolicyFormDataModel {
    BranchId: string;
    VerticalCode: string;
    Customer: ICustomerFormDataModel;
    CoverNoteNumber: string;
    CoverNoteIssueDateString: string;
    CoverNoteIssueDateDto: IDateDto | null;
    PolicyTerm: IPolicyTermFormDataModel;
    TpPolicy: ITpOdPolicyFormDataModel;
    OdPolicy: ITpOdPolicyFormDataModel;
    Nomination: INominationFormDataModel;
    InsuranceBranch: number; // not mapped in api
    NumberOfKiloMeterCovered: string;
    ExtendedKiloMeterCovered: string;
    FinanceBy: number;
    PreviousPolicy: IPreviousPolicyFormDataModel;
    InspectionData: IInspectionFormDataModel;
    PaymentData: IPaymentFormDataModel[];
    Vehicle: IVehicleFormDataModel;
    PolicySource: IPolicySourceFormDataModel;
    Premium: IPremiumFormDataModel;
    Document: any;
    ControlNumber: string;
    AddOnRider: IAddOnRiderModel;
    PreviousControlNumber: string;
    PolicyCancelReason: string;
    Vertical: string;
    VerticalId: number;
    VerticalSegmentId: number;
    ReconStatus: string;
    CommissionStatus: string;
    PolicyStatus: string;
    RenewalCounter: number;
    PolicyStatusId: number;
    DataEntryStatus: string;
    DataEntryStatusColor: string;
    PolicyStatusColor: string;
    CommissionStatusColor: string;
    ReconStatusColor: string;
    PolicyCancelReasonColor: string;
    Condition1: boolean;
    Condition2: boolean;
    IsBlockAgent: boolean;
    IsChangeAgent: boolean;
    AddOnSelected: string;
}